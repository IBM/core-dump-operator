name: Build and push images

on:
  push:
    branches:
      - master
    paths:
      - api/**
      - cmd/**
      - controllers/**
      - ./main.go
      - ./go.mod
      - ./go.sum
      - config/**
      - ./Dockerfile
      - ./Makefile
  workflow_dispatch:

env:
  VERSION: '0.0.1'
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build-push-bundle:
    runs-on: ubuntu-latest
    needs: build-push-controller
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}/core-dump-operator
      BUNDLE_IMAGE_NAME: ghcr.io/${{ github.repository }}/core-dump-operator-bundle
      CHANNELS: stable
      DEFAULT_CHANNEL: stable
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.19.2'
      - name: set ARCH and OD
        run: |
            echo "ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac)" >> $GITHUB_ENV
            echo "OS=$(uname | awk '{print tolower($0)}')" >> $GITHUB_ENV
            echo "OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.31.0" >> $GITHUB_ENV
      - name: download operator-sdk
        run: curl -LO ${{ env.OPERATOR_SDK_DL_URL }}/operator-sdk_${{ env.OS }}_${{ env.ARCH }}
      - name: move operator-sdk to binary path
        run: chmod +x operator-sdk_${{ env.OS }}_${{ env.ARCH }} && sudo mv operator-sdk_${{ env.OS }}_${{ env.ARCH }} /usr/local/bin/operator-sdk
      - name: Tidy
        run: |
          go mod tidy
      - name: Make bundle
        run: make bundle IMG=${{ env.IMAGE_NAME }}:v${{ env.VERSION }}
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push bundle
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.BUNDLE_IMAGE_NAME }}:latest
            ${{ env.BUNDLE_IMAGE_NAME }}:v${{ env.VERSION }}
          file: ./bundle.Dockerfile
         
  build-push-controller:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}/core-dump-operator
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.19.2'
      - name: Tidy
        run: |
          go mod tidy
          make generate fmt vet
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push controller
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}-${{ github.run_number }}
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:v${{ env.VERSION }}
          file: ./Dockerfile

  build-push-uploader:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}/core-dump-uploader
      CGO_ENABLED: 0
      GOOS: linux
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.19.2'
      - name: Tidy
        run: |
          go mod tidy
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build
        run: |
          go build -v -a -ldflags '-extldflags "-static"' -gcflags="all=-N -l" -o ./bin/core-dump-uploader ./cmd/core-dump-uploader/
          cp /etc/ssl/certs/ca-certificates.crt bin/
      - name: Build and push controller
        uses: docker/build-push-action@v2
        with:
          context: ./bin/
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}-${{ github.run_number }}
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:v${{ env.VERSION }}
          file: ./cmd/core-dump-uploader/Dockerfile
